<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ackurat.github.io</title>
    <link>https://ackurat.github.io</link>
    <description>Recent content on ackurat.github.io</description>
    <language>en-us</language>
    <managingEditor>Adam CL (mail@mail.com)</managingEditor>
    <webMaster>Adam CL (mail@mail.com)</webMaster>
    <copyright>&lt;span xmlns:cc=&apos;http://creativecommons.org/ns#&apos; &gt;This work is licensed under &lt;a href=&apos;https://creativecommons.org/licenses/by-nc-nd/4.0/?ref=chooser-v1&apos; target=&apos;_blank&apos; rel=&apos;license noopener noreferrer&apos; style=&apos;display:inline-flex;&apos;&gt;Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International&lt;img style=&apos;height:22px!important;margin-left:3px;vertical-align:text-bottom;&apos; src=&apos;https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1&apos; alt=&apos;&apos;&gt;&lt;img style=&apos;height:22px!important;margin-left:3px;vertical-align:text-bottom;&apos; src=&apos;https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1&apos; alt=&apos;&apos;&gt;&lt;img style=&apos;height:22px!important;margin-left:3px;vertical-align:text-bottom;&apos; src=&apos;https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1&apos; alt=&apos;&apos;&gt;&lt;img style=&apos;height:22px!important;margin-left:3px;vertical-align:text-bottom;&apos; src=&apos;https://mirrors.creativecommons.org/presskit/icons/nd.svg?ref=chooser-v1&apos; alt=&apos;&apos;&gt;&lt;/a&gt;&lt;/span&gt;</copyright>
    <lastBuildDate>Fri, 03 Oct 2025 14:48:07 +0000</lastBuildDate>
    <atom:link type="application/rss+xml" rel="self" href="https://ackurat.github.io/index.xml"/>
    <item>
      <title>Using Djot for Content</title>
      <link>https://ackurat.github.io/using-djot-for-content/</link>
      <pubDate>Tue, 18 Feb 2025 06:00:00 +0000</pubDate>
      <author>Adam CL (mail@mail.com)</author>
      <guid>https://ackurat.github.io/using-djot-for-content/</guid>
      <description>
&lt;p&gt;I’ve just set up the site to handle both &lt;a href=&quot;https://djot.net&quot;&gt;Djot&lt;/a&gt; and Markdown for writing content. It was surprisingly easy! This post outlines how to do it using &lt;a href=&quot;https://hexdocs.pm/nimble_publisher/&quot;&gt;NimblePublisher&lt;/a&gt; and a &lt;a href=&quot;https://hexdocs.pm/djot/&quot;&gt;Djot&lt;/a&gt; parser.&lt;/p&gt;
&lt;p&gt;We can &lt;a href=&quot;https://hexdocs.pm/nimble_publisher/NimblePublisher.html#module-custom-html-converter&quot;&gt;override&lt;/a&gt; the HTML converter used by NimblePublisher by simply plugging in our own. Our converter needs to implement the &lt;code&gt;convert/4&lt;/code&gt; function which returns the HTML as a string.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup elixir&quot;&gt;&lt;span class=&quot;kd&quot;&gt;defmodule&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;7857711208-1&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;7857711208-2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;_attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;_optds&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;7857711208-2&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;7857711208-3&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Djot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_html!&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;7857711208-4&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;7857711208-4&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;7857711208-3&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;7857711208-1&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since Djot is more or less a superset of Markdown, all previous content can be rendered successfully with the Djot parser. With the default HTML converter now defunct, NimblePublisher won’t apply the code highlighter, so we’ll need to add this to our &lt;code&gt;convert/4&lt;/code&gt; function. Let’s create two small helpers, one to apply highlighting to all block code and one to inline code:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup elixir&quot;&gt;&lt;span class=&quot;kd&quot;&gt;defp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;highlight_block_code&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;1247580043-2&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block_code&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;~r/&lt;pre&gt;&lt;code(?:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+class=&quot;language-(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*)&quot;)?&gt;([^&lt;]*)&lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;code&gt;&lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;pre&gt;/&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NimblePublisher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highlight&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-3&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block_code&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-3&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;1247580043-2&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;highlight_inline_code&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-4&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-4&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;1247580043-5&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline_code&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;~r/(?&lt;!&lt;pre&gt;)&lt;code(?:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;+class=&quot;language-(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;*)&quot;)?&gt;([^&lt;]*)&lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;code&gt;/&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-6&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;1247580043-7&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-8&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;_lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;_code&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-8&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NimblePublisher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highlight&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inline_code&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-10&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;~r/&lt;pre&gt;(.*)&lt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\/&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;pre&gt;/s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-10&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;1247580043-7&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1247580043-6&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;1247580043-5&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can just pipe the HTML output from the parser through these functions, and we’ll get highlighting. There are a few considerations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
We need the new regexes since the default used in &lt;code&gt;NimblePublisher.highlight/2&lt;/code&gt; doesn’t match anymore - the Djot parser uses an attribute like &lt;code class=&quot;makeup html&quot;&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;language-elixir&quot;&lt;/span&gt;&lt;/code&gt;.
&lt;/li&gt;
&lt;li&gt;
The library I use for highlighting, &lt;a href=&quot;https://hexdocs.pm/makeup/&quot;&gt;Makeup&lt;/a&gt; adds &lt;code class=&quot;makeup html&quot;&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1917811271-1&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;1917811271-1&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt; tags around code. This messes up the inline code, hence the replace code to remove them.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All that is left to do now is tell NimblePublisher to use the converter, both on markdown and djot:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup elixir&quot;&gt;&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NimblePublisher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./pages/**/*.{md,dj}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;highlighters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9978838162-1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:makeup_elixir&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9978838162-1&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;html_converter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Once again rewriting the site</title>
      <link>https://ackurat.github.io/once-again-rewriting-the-site/</link>
      <pubDate>Sat, 08 Feb 2025 06:00:00 +0000</pubDate>
      <author>Adam CL (mail@mail.com)</author>
      <guid>https://ackurat.github.io/once-again-rewriting-the-site/</guid>
      <description>
&lt;p&gt;Once again I’m rewriting the site. I never got around to finishing my &lt;a href=&quot;https://zine-ssg.io&quot;&gt;Zine&lt;/a&gt; implementation, partly because I didn’t have time to invest into learning Zig. I’ll soon start a new job where I’ll use &lt;a href=&quot;https://elixir-lang.org&quot;&gt;Elixir&lt;/a&gt; and &lt;a href=&quot;https://erlang.org&quot;&gt;Erlang&lt;/a&gt; as my main languages. I haven’t used Erlang much before, but Elixir has been a lurking favourite, and with my experiments with &lt;a href=&quot;https://gleam.run&quot;&gt;Gleam&lt;/a&gt; I found renewed interest in it.&lt;/p&gt;
&lt;p&gt;The site uses &lt;a href=&quot;https://github.com/dashbitco/nimble_publisher&quot;&gt;NimblePublisher&lt;/a&gt; and &lt;a href=&quot;https://github.com/phoenixframework/phoenix_live_view&quot;&gt;LiveView&lt;/a&gt; &lt;code&gt;HEEx&lt;/code&gt; templates. The basis for the site is &lt;a href=&quot;https://fly.io/phoenix-files/crafting-your-own-static-site-generator-using-phoenix/&quot;&gt;Jason Stiebe’s tutorial&lt;/a&gt;, and after I had implemented a rudimentary version I forked &lt;a href=&quot;https://jorin.me/&quot;&gt;Jorin’s website&lt;/a&gt; and started rebuilding it to my liking. Kudos to both these for saving me time! Unlike Jorin, I don’t have a desire to create my site generator from scratch, but I’ll happily spend time refactoring and tinkering.&lt;/p&gt;
&lt;section id=&quot;Upcoming-changes&quot;&gt;
&lt;h2&gt;&lt;a href=&quot;#Upcoming-changes&quot;&gt;Upcoming changes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Inspired by &lt;a href=&quot;https://www.jonashietala.se/blog/2024/07/09/microfeatures_in_my_blog/&quot;&gt;Jonas Hietala’s microfeatures&lt;/a&gt;, I have some features I want to implement. Just like he states, microfeatures are fun and a way to learn. For instance, I’ve already implemented headings with automatic linking. It was pretty straight forward - reimplement the parsing of headings to add markdown links, and add a postprocessor to add the anchor ID to the headings:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup elixir&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# parser.ex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;defp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;replace_heading&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-2&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starts_with?&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-3&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;## &quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-3&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-4&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-5&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;## &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-5&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-6&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-6&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-7&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;~r/[^a-z]+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-7&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-8&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-8&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;## [&lt;/span&gt;&lt;span class=&quot;si&quot; data-group-id=&quot;4437346737-9&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;si&quot; data-group-id=&quot;4437346737-9&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;](#&lt;/span&gt;&lt;span class=&quot;si&quot; data-group-id=&quot;4437346737-10&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;si&quot; data-group-id=&quot;4437346737-10&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-4&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-4&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-2&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# [processor.ex](#processor.ex)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-11&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-12&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-13&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-13&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-14&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-14&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-15&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-15&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-12&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-11&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-16&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-17&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-18&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-19&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-20&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anchor_id&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-20&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-19&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-18&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-21&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-22&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-23&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;anchor_id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-24&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-24&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-23&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-22&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-25&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-25&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-26&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-26&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-21&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-27&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-28&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-28&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-29&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-29&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-30&quot;&gt;%{&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-30&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;4437346737-27&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-17&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot; data-group-id=&quot;4437346737-16&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;section id=&quot;Djot-support&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;#Djot-support&quot;&gt;Djot support&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;One microfeature I really like in Jonas’ blog is syntax highlighting in inline code. I could solve this by either writing the inline code as HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is some markdown with inline Elixir code: &lt;code class=&quot;makeup elixir&quot;&gt;def process(value), do: value&lt;/code&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unfortunately, the markdown parser used by NimblePublisher, &lt;a href=&quot;https://github.com/pragdave/earmark&quot;&gt;Earmark&lt;/a&gt; doesn’t support inline HTML. It’s probably solvable by using a postprocessor, but that feels like a tedious rabbit hole. Instead, I want to take the same &lt;a href=&quot;https://www.jonashietala.se/blog/2024/02/02/blogging_in_djot_instead_of_markdown/&quot;&gt;path as Jonas&lt;/a&gt; and use &lt;a href=&quot;https://www.djot.net/&quot;&gt;Djot&lt;/a&gt; to write content. Djot supports adding &lt;a href=&quot;https://htmlpreview.github.io/?https://github.com/jgm/djot/blob/master/doc/syntax.html#inline-attributes&quot;&gt;inline attributes&lt;/a&gt; which could be used like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is some markdown with inline Elixir code: `def process(value), do: value`{.makeup .elixir}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are more features of Djot I could use, for instance footnotes.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;Less-hand-written-CSS&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;#Less-hand-written-CSS&quot;&gt;Less hand-written CSS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’m using &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;TailwindCSS&lt;/a&gt; to lessen the need of writing CSS, but since I use Earmark to produce the HTML of the post you’re reading right now, it’s not simple to use Tailwind for styling within the generated HTML. Instead, I’ve resorted to hand-writing CSS. I’m trying to minimize it and if I switch to Djot, I’ll see if it’s easier to have a post processing step to add Tailwind classes to the generated HTML.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;Typography-improvements&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;#Typography-improvements&quot;&gt;Typography improvements&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The styling and typography is very basic right now. I like it basic, but I still think there is room for improvement. For instance, the header of this section is not very well separated stylistically.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</description>
    </item>
    <item>
      <title>Exploring gleam through advent of code</title>
      <link>https://ackurat.github.io/exploring-gleam-through-advent-of-code/</link>
      <pubDate>Mon, 11 Nov 2024 06:00:00 +0000</pubDate>
      <author>Adam CL (mail@mail.com)</author>
      <guid>https://ackurat.github.io/exploring-gleam-through-advent-of-code/</guid>
      <description>
&lt;p&gt;&lt;a href=&quot;https://gleam.run&quot;&gt;Gleam&lt;/a&gt; is a statically typed functional programming language that gets compiled to either &lt;a href=&quot;https://en.wikipedia.org/wiki/BEAM_(Erlang_virtual_machine&quot;&gt;BEAM&lt;/a&gt;) or JavaScript. Its syntax is more akin to &lt;a href=&quot;https://rust-lang.org&quot;&gt;Rust&lt;/a&gt; than other BEAM languages such as &lt;a href=&quot;https://elixir-lang.org&quot;&gt;Elixir&lt;/a&gt; and &lt;a href=&quot;https://erlang.org&quot;&gt;Erlang&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-gleam&quot;&gt;pub fn split(x: String, on substring: String) -&gt; List(String) {
  case substring {
    &quot;&quot; -&gt; to_graphemes(x)
    _ -&gt;
      x
      |&gt; string_builder.from_string
      |&gt; string_builder.split(on: substring)
      |&gt; list.map(with: string_builder.to_string)
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;section id=&quot;Why-I-Chose-Gleam&quot;&gt;
&lt;h2&gt;&lt;a href=&quot;#Why-I-Chose-Gleam&quot;&gt;Why I Chose Gleam&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;First and foremost, I wanted to try something new. Gleam ticked quite a few of the boxes of things I like in a language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
Static type system
&lt;/li&gt;
&lt;li&gt;
Immutability
&lt;/li&gt;
&lt;li&gt;
Compiled
&lt;/li&gt;
&lt;li&gt;
Built-in tooling
&lt;/li&gt;
&lt;li&gt;
Decent standard library
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the purpose of AoC, it’s mainly the type system, tooling and standard library I’m choosing Gleam. I might take on doing something more complicated (and distributed) afterwards.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;First-Impressions&quot;&gt;
&lt;h2&gt;&lt;a href=&quot;#First-Impressions&quot;&gt;First Impressions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As I usually work in procedural languages, getting into the strictly functional paradigm has been the biggest hurdle. Don’t get me wrong - I often use the functional style functions of JS, but due to its mutability and dynamic typing, it’s far from Gleam. I’ve previously delved into Elixir, and while it is also functional it’s got the dynamic typing to make it less of a jump. After completing the first 8 days of AoC, I’m getting used to it and I see the light that is immutability. In the codebase I spend most time in at work, there’s plenty of functionality that modifies in-place, causing both confusion and bugs for developers who are new to the code.&lt;/p&gt;
&lt;section id=&quot;Missed-Functionality-1---list-access-by-index&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;#Missed-Functionality-#1---list-access-by-index&quot;&gt;Missed Functionality #1 - list access by index&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When it comes to AoC, it’s very common to work with arrays/lists, for instance in a matrix:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;matrix = [[&apos;a&apos;, &apos;b&apos;], [&apos;c&apos;, &apos;d&apos;]]
matrix[0][0] # &apos;a&apos;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s say then that a task requires shifting rows by 1:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def shift_row_right(matrix, row_index, n):
    row = matrix[row_index]
    n = n % len(row)
    shifted_row = row[-n:] + row[:-n]
    matrix[row_index] = shifted_row
    return matrix

shift_row_right(matrix, 0, 1) # [[&apos;b&apos;, &apos;a&apos;], [&apos;c&apos;, &apos;d&apos;]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Performance aside, this is a very simple and neat way of accessing elements in a list. There’s no need to iterate over the rows. In Gleam, you can’t access lists by index. Instead, you have to iterate through the list until you’re on the right index. Pairing this with the immutability means that shifting rows as above is a bit more tedious. For AoC 2016 day 8, this was the solution I came up with for shifting rows with wrap around:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-gleam&quot;&gt;pub fn shift_row_right(
  matrix: Matrix(value),
  row: Int,
  shift: Int,
) -&gt; Matrix(value) {
  Matrix(
    cells: list.index_map(matrix.cells, fn(current_row, row_index) {
      case row_index == row {
        True -&gt; {
          current_row
          |&gt; list.split(list.length(current_row) - shift)
          |&gt; fn(split) { list.append(split.1, split.0) }
        }
        False -&gt; current_row
      }
    }),
  )
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We first have to iterate through all the rows, and in case of being on the wrong row we just return it as is. In case of being on the right row, we then need to construct a new row by iterating over the row, first to split it and then over the first part of the new list (&lt;code&gt;split.1&lt;/code&gt;) in the &lt;code&gt;list.append&lt;/code&gt; function.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
</description>
    </item>
    <item>
      <title>Setting up a site with zine</title>
      <link>https://ackurat.github.io/setting-up-a-site-with-zine/</link>
      <pubDate>Sun, 27 Oct 2024 06:00:00 +0000</pubDate>
      <author>Adam CL (mail@mail.com)</author>
      <guid>https://ackurat.github.io/setting-up-a-site-with-zine/</guid>
      <description>
&lt;section id=&quot;First-Steps&quot;&gt;
&lt;h2&gt;&lt;a href=&quot;#First-Steps&quot;&gt;First Steps&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Were me just copying the Zine creator &lt;a href=&quot;https://kristoff.it/&quot;&gt;Kristoff’s&lt;/a&gt; personal website, and then started tailoring it to my liking. I’m by no means a designer nor a frontend developer, but I’m happy with the result so far. I’ll continue to tweak the layout and design, for instance by implementing my favorite color scheme, Catppuccin.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;What-I-like-About-Zine&quot;&gt;
&lt;h2&gt;&lt;a href=&quot;#What-I-like-About-Zine&quot;&gt;What I like About Zine&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I like the simplicity of Zine, and it’s been really simple to understand how both routing and rendering works. It gets out of my way. &lt;code&gt;SuperMD&lt;/code&gt; and &lt;code&gt;SuperHTML&lt;/code&gt; are also nice to work with, but I’ve yet to see both the full potential of them and the limitations. I’ve previously worked with for instance &lt;code&gt;Templ&lt;/code&gt; to generate HTML, so I’m excited to see how Zine compares.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;Whats-Next&quot;&gt;
&lt;h2&gt;&lt;a href=&quot;#What&apos;s-Next&quot;&gt;What’s Next&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are some things with the site that are far from finished. For instance, the CSS is a mess, as I’ve used Kristoff’s CSS as a base and then just added some of my own. It needs cleaning up.&lt;/p&gt;
&lt;section id=&quot;Tags&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;#Tags&quot;&gt;Tags&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’m adding tags to this post, but so far there’s no way to filter posts by tags. I’ll have to implement that.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&quot;RSS-✅&quot;&gt;
&lt;h3&gt;&lt;a href=&quot;#RSS-✅&quot;&gt;RSS ✅&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I’m a big fan of RSS, and it’s my preferred way of reading blogs. I’ve used Kristoff’s RSS implementation as a base, but there’s one limitation that I want to work on - there’s no way to render the full content of a post in the feed, since it’s a subpage. This is a limitation of Zine itself, so if I want to change this I’ll have to dig into the Zine source code and try to implement it.&lt;/p&gt;
&lt;p&gt;The limitation can be seen in this excerpt from the RSS template, where I’m trying to render the full content of a post. This errors out with &lt;code&gt;only the main page can be rendered for now, sorry!&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup html&quot;&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-1&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$page.subpages()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-1&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-2&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-2&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&lt;!-- 
      Here goes the rest of the RSS info for the post
    --&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-3&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$loop.it.content()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-3&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-4&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-4&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-5&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-5&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-6&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;2789846259-6&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;section id=&quot;Update&quot;&gt;
&lt;h4&gt;&lt;a href=&quot;#Update&quot;&gt;Update&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I’ve implemented a full RSS feed, which is kind of a hack but it ain’t stupid if it works. The solution revolves around fetching the content sections of a page, and then generating the HTML for each section. This is how the XML for the RSS feed looks like now:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makeup html&quot;&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-1&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$page.subpages()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-1&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-2&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-2&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-3&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$loop.it.title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-3&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-4&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-4&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&lt;!-- 
      Here goes the rest of the RSS info for the post
    --&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-5&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$site.page($loop.it.link()).contentSections()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-5&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-6&quot;&gt;&lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;:text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$loop.it.html()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-6&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-7&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-7&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-8&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-8&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-9&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-9&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-10&quot;&gt;&lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot; data-group-id=&quot;9336387445-10&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the corresponding change to the post:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#### [Heading]($section.id(&quot;heading&quot;))

Text goes here...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An added benefit of this is that the headers are clickable, which is included in the table of contents of the post.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
</description>
    </item>
  </channel>
</rss>